Operation of IBM 1401 Registers The IBM 1401 Data Processing System can operate on and process data to produce a desired result by executing a  series of instructions at high speed. A series of instructions designed to solve a  problem is  known as a program. Because these instructions are retained in core storage, it is more properly called a  stored pro-gram. The processing unit must interpret an instruction and perform the function prescribed by the instruction. In order to do this, various types of devices that are capable of receiving information, storing it, and transferring it as directed by control circuits are used.devices are known as registers. The 1401 has seven registers, four are address registers and three are character registers
IBM 1401 Autocoder The 1401 Autocoder is a  more powerful symbolic programming system for the IBM 1401 Data Processing System. This system provides a macro facility that permits the user to call out standard sets of instructions (routines) from a library stored on magnetic tape. It also permits him to code literals (actual data to be operated on during processing) directly in the instructions that use them, thus simplifying the area-definition part of the source program. The 1401 Autocoder system can be used to assemble programs for all IBM 1401 Data Processing Systems. However, the machine used to assemble an Autocoder program must have at least: 4,000 positions of core storage Four IBM 729 II, 729 IV, 729 V, or 7330 Magnetic Tape Units IBM 1403 Printer, Model 2 IBM 1402 Card Read-Punch Advanced-Programming Features High-Low-Equal Compare Feature Sense Switches An Autocoder source program, like SPS, is written on a  special coding sheet (form X24-1350). Autocoder statements, however, are written in free-form.Input.Output Control System (I0CS) The IBM 1401 input-output control system eliminates the need for detailed programming of standard input and output operations. It is included as part of the 1401 Autocoder system, and provides additional control, record-definition statements, and macro-instructions. With these entries the user can specify the input and output devices and the contents of file records. The library routines for reading and writing, blocking and de-blocking, file labeling, and error checking are furnished as part of the Autocoder processor and can be extracted by using the IOCS macro-instructions. The Autocoder processor tailors the IOCS routines to fit the particular requirements, specified by the programmer, for each job. The Autocoder processor pro-duces the minimum number of instructions needed by interpreting the detailed information the programmer supplies in the control entries. Although IOCS is used primarily for magnetic-tape files, IOCS macro-instructions can also be used for unit-record files (input and output files) from, and to, the IBM 1402 Card Read-Punch and the IBM 1403 Printer. The IOCS is described in detail in the IBM 1401 Data Processing System bulletin: Input-Output Control System (form J24-1462).
IBM 1401 Report Program Generator (RPG) The report program generator is a special program designed to produce report-writing object programs from report specifications given by the user. Instead of writing a  specific program for a  report, the user states his problem in RPG language. The RPG processor program interprets these specifications and produces an object program that uses source data from punched-card, magnetic-tape, or disk-storage files. Output from the RPG-produced programs can be printed reports, punched cards, or magnetic tape. The reports produced by programs generated by the RPG range from a simple listing of items from the input file to complex reports that incorporate editing and calculating the input data. Included are such functions as printing various kinds of lines (heading lines, detail lines, total lines initiated by control-field changes, offset total lines, etc.); serial and page num-bering; cross footing; and summary punching. Exception records can be produced with the reports. The RPG processor can assemble object programs on a 1401 system with at least 4,000 positions of core-storage, an IBM 1402 Card Read-Punch, and an IBM 1403 Printer, Modell or 2. The machine requirements for executing the object program depend upon the units the user has specified. The RPG is described in detail in the IBM 1401 Data Processing System bulletins: Report Program Genera-tor for IBM 1401 Card and Tape Systems (form J24-0215) and Report Program Generator for IBM RAMAC 1401 Systems (form J24-1467).
Instructions and data to be used for processing in the 1401 are kept in core storage. Each position in storage is addressable (Figure 13). A field is defined by an eighth bit (called a word mark) and can contain either an instruction or data. A data field is defined by a  word mark in the high-order position. The units or low-order position of a data field is specified in the A-or B-address of the instruction. The data field is read from right to left until a word mark in the high-order position is sensed. An instruction is  addressed by giving the high-order (operation code) position of the instruction. All operation codes must have a word mark. (This word mark is normally set by the loading routine when the instructions are loaded.) The machine reads an instruction from left to right until it senses the word mark associated with the next sequential instruction. The final instruction in the program must have a word mark set at the right of its low-order position. Example: Instruction address 400 (Figure 14) contains the operation code for the following instruction: Op Code A-address B-address ~ 542 560 When this instruction is executed, the data in the A-field is added to the data in the B-field.
Three areas of storage are reserved for input and out-put data. Storage positions 001 through 080, are reserved for the information from the 80 columns of the card. The second area of storage, positions 101 through 180, is reserved for assembling data to be punched. Positions 000 and 100 should not be used. Data stored in position 000 before a  card read operation is replaced by CAB bits at the end of the read operation.
The IBM 1401 input-output control system eliminates the need for detailed programming of standard input and output operations. It is included as part of the 1401 Autocoder system, and provides additional control, record-definition statements, and macro-instructions. With these entries the user can specify the input and output devices and the contents of file records. The library routines for reading and writing, blocking and deblocking, file labeling, and error checking are furnished as part of the Autocoder processor and can be extracted by using the IOCS macro-instructions. The Autocoder processor tailors the IOCS routines to fit the particular requirements, specified by the programmer, for each job. The Autocoder processor pro-duces the minimum number of instructions needed by interpreting the detailed information the programmer supplies in the control entries. Although IOCS is used primarily for magnetic-tape files, IOCS macro-instructions can also be used for unit-record files (input and output files) from, and to, the IBM 1402 Card Read-Punch and the IBM 1403 Printer. The IOCS is described in detail in the IBM 1401 Data Processing System bulletin: Input-Output Control System (form J24-1462).
The IBM 1401 Data Processing System adds, subtracts, multiplies, and divides by applying the add to storage method of operation. The two factors to be combined are added within core storage without the use of special accumulators or counters. Because any storage area can be used as an accumulator field, the capacity for performing arithmetic functions is not limited by standard-size accumulators or by a predetermined number of accumulators within the system. Also, program-ming steps can be saved because some arithmetic operations require that only one field be transferred. In arithmetic operations, the 1401 system considers blanks and zeros the same. An unsigned field is considered positive by the system. The design of the IBM 1401 Data Processing System provides for two types of add operations: 1. true add 2. complement add The type of operation performed depends on the operation code and the algebraic signs of the factors. The resultant sign depends on the algebraic values of the factors (Figure 23) . A negative sign is indicated by a B-bit in the units position of a  field. Any other zone-bit combination in the units position is considered a  plus sign (A-and B-bits, A-no B-bit, or no A-no B-bit). Either A-and B-bits or no A-no B-bits should be used for signing a  positive field. 
